#____________________CREATE TBL_USER DUMMY DATA___________________________________________ 

BEGIN
    FOR i IN 1..500 LOOP
    INSERT INTO tbl_user(ph_num, user_sex, user_birth, regi_date, user_id, user_level) 
    VALUES(            -- ph_num (숫자형)
            TRUNC(DBMS_RANDOM.VALUE(10000000, 99999999)),
            -- user_sex (0 또는 1)
            ROUND(DBMS_RANDOM.VALUE(0, 1)),
            
            -- user_birth (날짜를 나타내는 숫자형)
            TO_DATE('19750101', 'YYYYMMDD') + DBMS_RANDOM.VALUE(1, TO_DATE('20151231', 'YYYYMMDD') - TO_DATE('19750101', 'YYYYMMDD')),

            -- regi_date (날짜형)
            TO_DATE('20220101 12:00:00', 'YYYYMMDD HH24:mi:ss') + DBMS_RANDOM.VALUE(1, 365),
            
            -- user_id (시퀀스)
            user_seq.NEXTVAL,
            
            -- user_level (1~3 중의 하나인 숫자형)
            ROUND(DBMS_RANDOM.VALUE(1, 3)));
    END LOOP;
END;

#____________________CREATE TBL_ORDER DUMMY DATA___________________________________________ 


#테스트로 들어간 데이터를 지워야 정상작동
BEGIN
    FOR i IN 1..10000 LOOP
        INSERT INTO tbl_order(order_date, order_id, ph_num, menu_count, cate_id, menu_id) 
        VALUES(
            TO_DATE('20200101', 'YYYYMMDD') + TRUNC(DBMS_RANDOM.VALUE(1, TO_DATE('20240305', 'YYYYMMDD') - TO_DATE('20200101', 'YYYYMMDD'))),
           
            order_seq.nextval,
           
            (SELECT ph_num FROM (SELECT ph_num FROM tbl_user ORDER BY DBMS_RANDOM.VALUE)WHERE ROWNUM = 1),

            ROUND(DBMS_RANDOM.VALUE(1, 5)),
            
            (SELECT cate_id FROM (SELECT cate_id FROM tbl_menu ORDER BY DBMS_RANDOM.VALUE)WHERE ROWNUM = 1),
            
            (SELECT menu_id FROM (SELECT menu_id FROM tbl_menu ORDER BY DBMS_RANDOM.VALUE)WHERE ROWNUM = 1)
        );
    END LOOP;
END;



# menu_sale_price의 값은 처음에 입력하지 않고, 이후에 계산해주는 절차를 한번 걸쳐서 넣는다.

UPDATE tbl_order o
SET menu_sale_price = (SELECT menu_price * o.menu_count
                       FROM tbl_menu m
                       WHERE o.cate_id = m.cate_id AND o.menu_id = m.menu_id);